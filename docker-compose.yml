services:
  postgresql:
    container_name: postgresql
    image: postgres:16.2
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    volumes:
      - ./docker-volumes/postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - microservices-banking
  mysql:
    container_name: mysql
    image: mysql:latest
    environment:
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./docker-volumes/mysql:/data/mysql
    ports:
      - "3306:3306"
    restart: unless-stopped
    networks:
      - microservices-banking


  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - microservices-banking

  redis:
    image: redis:6.2-alpine
    container_name: redis
    hostname: redis
    ports:
      - '6379:6379'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB;FLUSHALL
    networks:
      - microservices-banking

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "2181:2181"
    restart: unless-stopped
    networks:
      - microservices-banking

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./docker-volumes/kafka:/data/kafka
    ports:
      - "9092:9092"
    restart: unless-stopped
    networks:
      - microservices-banking
networks:
  microservices-banking:
    driver: bridge

volumes:
  docker-volumes:
